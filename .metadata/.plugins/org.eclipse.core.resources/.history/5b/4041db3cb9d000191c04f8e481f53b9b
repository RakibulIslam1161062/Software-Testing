


import static org.hamcrest.MatcherAssert.assertThat;
import static org.junit.Assert.assertEquals;

import java.time.LocalDate;
import java.time.Month;

import org.junit.Test;

class BookshelfTest {

	@Test
	void Addtest() {
		BookShelf bookShelf = new BookShelf(3);
		LocalDate date = LocalDate.of(1900, Month.MAY, 7);
		Book newBook2 = new Book("Java Book", "rakib",date );
		Boolean check = bookShelf.add(newBook2);
		assertEquals(check, true);
		
	}
	@Test
	void Addtest2() {
		BookShelf bookShelf = new BookShelf(1);
		LocalDate date = LocalDate.of(1900, Month.MAY, 7);
		Book newBook2 = new Book("Java Book", "rakib",date );
		Book newBook3 = new Book("Java Book", "rakib",date );
		bookShelf.add(newBook2);
		Boolean check = bookShelf.add(newBook3);
		assertEquals(check, false);
		
	}
	@Test
	void Addtest3() {
		BookShelf bookShelf = new BookShelf(0);
		LocalDate date = LocalDate.of(1900, Month.MAY, 7);
		Book newBook3 = new Book("Java Book", "rakib",date );
		Boolean check = bookShelf.add(newBook3);
		assertEquals(check, false);
		
	}
	
	@Test
	void booksTest() {
		ArrayList<Book> bookTitle = new ArrayList<Book>();
		ArrayList<Book> bookTitle2 = new ArrayList<Book>();
	
		BookShelf bookShelf = new BookShelf(1);
		LocalDate date = LocalDate.of(1900, Month.MAY, 7);
		Book newBook3 = new Book("Java Book", "rakib",date );
		bookTitle2.add(newBook3);
		Book newBook4 = new Book("Java Book", "rakib",date );
		bookShelf.add(newBook3);
		bookTitle = (ArrayList<Book>) bookShelf.books();
		
		assertThat(bookTitle,  is(bookTitle2));
		
	}

}
